comp_body = '''
ram_a_row.dma_read(maxi, 0, a_row_offset, a_height + 1)
row_begin = ram_a_row.read(0)
a_col_addr = a_col_offset
a_val_addr = a_val_offset
c_addr = c_offset
for i in range(1, a_height + 1):
    row_end = ram_a_row.read(i)
    row_range = row_end - row_begin
    row_begin = row_end
    ram_c.wait_not_full()
    for l in range(b_width):
        ram_c.write(l, 0)
    if row_range > 0:
        ram_a_col.dma_read(maxi, 0, a_col_addr, row_range)
        ram_a_col.push()
        ram_a_val.dma_read(maxi, 0, a_val_addr, row_range)
        ram_a_val.push()
        ram_a_col.wait_not_empty()
        ram_a_val.wait_not_empty()
        a_col_addr += row_range * (datawidth // 8)
        a_val_addr += row_range * (datawidth // 8)
        for j in range(row_range):
            idx = ram_a_col.read(j)
            b_addr = b_offset + idx * b_width * (datawidth // 8)
            ram_b.dma_read(maxi, 0, b_addr, b_width)
            ram_b.push()
            ram_b.wait_not_empty()
            x = ram_a_val.read(j)
            for k in range(b_width):
                y = ram_b.read(k)
                z = ram_c.read(k)
                w = z + x*y
                ram_c.write(k, w)
            ram_b.pop()
        ram_a_col.pop()
        ram_a_val.pop()
    ram_c.push()
    ram_c.dma_write(maxi, 0, c_addr, b_width)
    ram_c.pop()
    c_addr += b_width * (datawidth // 8)'''
